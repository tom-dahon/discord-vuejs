{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Select2 = _resolveComponent(\"Select2\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Select2, {\n    modelValue: $data.myValue,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.myValue = $event),\n    options: $data.myOptions,\n    settings: {\n      settingOption: _ctx.value,\n      settingOption: _ctx.value\n    },\n    onChange: _cache[1] || (_cache[1] = $event => $options.myChangeEvent($event)),\n    onSelect: _cache[2] || (_cache[2] = $event => $options.mySelectEvent($event))\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\", \"settings\"]), _createElementVNode(\"h4\", null, \"Value: \" + _toDisplayString($data.myValue), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_Select2","$data","myValue","$event","options","myOptions","settings","settingOption","_ctx","value","onChange","_cache","$options","myChangeEvent","onSelect","mySelectEvent","_createElementVNode","_toDisplayString"],"sources":["/Users/ben/Documents/dev/discord-vuejs/Front/src/components/chat/multipleSelector.vue"],"sourcesContent":["import Select2 from 'vue3-select2-component';\n\n<template>\n  <div>\n    <Select2 v-model=\"myValue\" :options=\"myOptions\" :settings=\"{ settingOption: value, settingOption: value }\" @change=\"myChangeEvent($event)\" @select=\"mySelectEvent($event)\" />\n    <h4>Value: {{ myValue }}</h4>\n  </div>\n</template>\n<script>\nimport Select2 from 'vue3-select2-component';\n\nexport default {\n  name: multipleSelector,\n    // declare Select2Component\n    components: {Select2},\n    data() {\n        return {\n            myValue: '',\n            myOptions: ['op1', 'op2', 'op3'] // or [{id: key, text: value}, {id: key, text: value}]\n        }\n    },\n    methods: {\n        myChangeEvent(val){\n            console.log(val);\n        },\n        mySelectEvent({id, text}){\n            console.log({id, text})\n        }\n    }\n}\n</script>"],"mappings":";;;uBAGEA,mBAAA,CAGM,cAFJC,YAAA,CAA6KC,kBAAA;gBAA3JC,KAAA,CAAAC,OAAO;+DAAPD,KAAA,CAAAC,OAAO,GAAAC,MAAA;IAAGC,OAAO,EAAEH,KAAA,CAAAI,SAAS;IAAGC,QAAQ;MAAAC,aAAA,EAAmBC,IAAA,CAAAC,KAAK;MAAAF,aAAA,EAAiBC,IAAA,CAAAC;IAAK;IAAKC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAR,MAAA,IAAES,QAAA,CAAAC,aAAa,CAACV,MAAM;IAAIW,QAAM,EAAAH,MAAA,QAAAA,MAAA,MAAAR,MAAA,IAAES,QAAA,CAAAG,aAAa,CAACZ,MAAM;kEACxKa,mBAAA,CAA6B,YAAzB,SAAO,GAAAC,gBAAA,CAAGhB,KAAA,CAAAC,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}