{"ast":null,"code":"import Multiselect from 'vue-multiselect';\nexport default {\n  components: {\n    Multiselect\n  },\n  props: {\n    mechanics: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      value: [],\n      options: [{\n        name: 'Vue.js',\n        language: 'JavaScript'\n      }, {\n        name: 'Adonis',\n        language: 'JavaScript'\n      }, {\n        name: 'Rails',\n        language: 'Ruby'\n      }, {\n        name: 'Sinatra',\n        language: 'Ruby'\n      }, {\n        name: 'Laravel',\n        language: 'PHP'\n      }, {\n        name: 'Phoenix',\n        language: 'Elixir'\n      }]\n    };\n  },\n  methods: {\n    onSearchMechanicsChange(term) {\n      this.$inertia.get('/jobs/create', {\n        term\n      }, {\n        preserveState: true,\n        preserveScroll: true,\n        replace: true\n      });\n    },\n    onSelectedMechanic(consultant) {\n      this.form.consultant_id = consultant.id;\n    }\n  }\n};","map":{"version":3,"names":["Multiselect","components","props","mechanics","type","Array","default","data","value","options","name","language","methods","onSearchMechanicsChange","term","$inertia","get","preserveState","preserveScroll","replace","onSelectedMechanic","consultant","form","consultant_id","id"],"sources":["/Users/ben/Documents/dev/discord-vuejs/Front/src/components/chat/popupConv.vue"],"sourcesContent":["<template>\n    <!-- Modal Boostrap -->\n    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Conversation</h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body text-center\">\n\n            <h2>Nom du groupe</h2>\n            <div class=\"form-floating mb-3\">\n              <input type=\"text\" class=\"form-control\" id=\"groupName\" placeholder=\"Nom du groupe\">\n              <label for=\"groupName\"></label>\n            </div>\n\n            <h2>Ajout d'un Utilisateur</h2>\n\n            <form class=\"was-validated mb-3\">\n              <!-- <select class=\"form-select\" data-placeholder=\"Utilisateurs\" id=\"valid-was-validated-multiple-field\" multiple>\n              </select> -->\n              <template>\n                <form>\n                  <label for=\"mechanic_id\">Mechanic</label>\n                  <multiselect\n                    v-model=\"selectedMechanic\"\n                    id=\"mechanic_id\" placeholder=\"Search mechanic\"\n                    :options=\"mechanics\" label=\"name\" track-by=\"id\"\n                    @search-change=\"onSearchMechanicsChange\"\n                    @input=\"onSelectedMechanic\"\n                    />\n                </form>\n              </template>\n            </form>\n        </div>\n      </div>\n    </div>\n    </div>\n  \n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\n  export default {\n    components: { Multiselect },\n    props: {\n    mechanics: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      value: [],\n      options: [\n        { name: 'Vue.js', language: 'JavaScript' },\n        { name: 'Adonis', language: 'JavaScript' },\n        { name: 'Rails', language: 'Ruby' },\n        { name: 'Sinatra', language: 'Ruby' },\n        { name: 'Laravel', language: 'PHP' },\n        { name: 'Phoenix', language: 'Elixir' }\n      ]\n    }\n  },\n  methods: {\n    onSearchMechanicsChange(term) {\n      this.$inertia.get('/jobs/create', {term}, {\n        preserveState: true,\n        preserveScroll: true,\n        replace: true\n      })\n    },\n    onSelectedMechanic(consultant) {\n      this.form.consultant_id = consultant.id;\n    },\n  }\n}\n</script>\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n\n<style>\n\n</style>"],"mappings":"AA2CA,OAAOA,WAAU,MAAO,iBAAgB;AACtC,eAAe;EACbC,UAAU,EAAE;IAAED;EAAY,CAAC;EAC3BE,KAAK,EAAE;IACPC,SAAS,EAAE;MACTC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,CACP;QAAEC,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAa,CAAC,EAC1C;QAAED,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAa,CAAC,EAC1C;QAAED,IAAI,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAO,CAAC,EACnC;QAAED,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAO,CAAC,EACrC;QAAED,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAM,CAAC,EACpC;QAAED,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAS;IAE1C;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,uBAAuBA,CAACC,IAAI,EAAE;MAC5B,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAC,cAAc,EAAE;QAACF;MAAI,CAAC,EAAE;QACxCG,aAAa,EAAE,IAAI;QACnBC,cAAc,EAAE,IAAI;QACpBC,OAAO,EAAE;MACX,CAAC;IACH,CAAC;IACDC,kBAAkBA,CAACC,UAAU,EAAE;MAC7B,IAAI,CAACC,IAAI,CAACC,aAAY,GAAIF,UAAU,CAACG,EAAE;IACzC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}