{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.useAttrs(Vuex);\nexport default new Vuex.Store({\n  state: {\n    token: null,\n    acceptCookies: false\n  },\n  getters: {\n    getToken: state => state.token,\n    areCookiesAccepted: state => state.acceptCookies\n  },\n  mutations: {\n    setToken(state, token) {\n      Vue.set(state.user, 'token', token);\n    },\n    setAcceptedCookies(state, bool) {\n      Vue.set(state, 'acceptCookies', bool);\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","useAttrs","Store","state","token","acceptCookies","getters","getToken","areCookiesAccepted","mutations","setToken","set","user","setAcceptedCookies","bool"],"sources":["C:/Users/tomda/Documents/Cours S4/discord-vuejs/Front/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nVue.useAttrs(Vuex)\r\nexport default new Vuex.Store({\r\n    state: {\r\n        token: null,\r\n        acceptCookies: false,\r\n    },\r\n    getters: {\r\n        getToken: state => state.token,\r\n        areCookiesAccepted: state => state.acceptCookies\r\n    },\r\n    mutations: {\r\n        setToken(state, token) {\r\n            Vue.set(state.user, 'token', token);\r\n        },\r\n        setAcceptedCookies(state, bool) {\r\n            Vue.set(state, 'acceptCookies', bool);\r\n        }\r\n    }\r\n})"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvBD,GAAG,CAACE,QAAQ,CAACD,IAAI,CAAC;AAClB,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC1BC,KAAK,EAAE;IACHC,KAAK,EAAE,IAAI;IACXC,aAAa,EAAE;EACnB,CAAC;EACDC,OAAO,EAAE;IACLC,QAAQ,EAAEJ,KAAK,IAAIA,KAAK,CAACC,KAAK;IAC9BI,kBAAkB,EAAEL,KAAK,IAAIA,KAAK,CAACE;EACvC,CAAC;EACDI,SAAS,EAAE;IACPC,QAAQA,CAACP,KAAK,EAAEC,KAAK,EAAE;MACnBL,GAAG,CAACY,GAAG,CAACR,KAAK,CAACS,IAAI,EAAE,OAAO,EAAER,KAAK,CAAC;IACvC,CAAC;IACDS,kBAAkBA,CAACV,KAAK,EAAEW,IAAI,EAAE;MAC5Bf,GAAG,CAACY,GAAG,CAACR,KAAK,EAAE,eAAe,EAAEW,IAAI,CAAC;IACzC;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}