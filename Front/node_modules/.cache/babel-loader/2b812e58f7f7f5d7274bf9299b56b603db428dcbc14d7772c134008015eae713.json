{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../views/Home.vue';\nimport Signin from '../views/Signin/Signin.vue';\nimport Signup from '../views/Signup.vue';\nimport { useStore } from 'vuex';\nconst store = useStore();\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [{\n    path: '/chat',\n    component: Home\n  }, {\n    path: '/signin',\n    component: Signin\n  }, {\n    path: '/signup',\n    component: Signup\n  }, {\n    path: '/test',\n    component: chat\n  }]\n});\n\n/*router.beforeEach((to, from, next) => {\r\n  const publicPages = ['/test'];\r\n  const authRequired = !publicPages.includes(to.path);\r\n  const loggedIn = store.state.token;\r\n\r\n  // trying to access a restricted page + not logged in\r\n  // redirect to login page\r\n  if (authRequired && !loggedIn) {\r\n    next('/signin');\r\n  } else {\r\n    next();\r\n  }\r\n}); */\n\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Signin","Signup","useStore","store","router","history","routes","path","component","chat"],"sources":["C:/Users/tomda/Documents/Cours S4/discord-vuejs/Front/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory} from 'vue-router';\r\nimport Home from '../views/Home.vue';\r\nimport Signin from '../views/Signin/Signin.vue';\r\nimport Signup from '../views/Signup.vue';\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore()\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes: [\r\n    { \r\n      path: '/chat', \r\n      component: Home \r\n    },\r\n    {\r\n      path: '/signin',\r\n      component: Signin\r\n    },\r\n    {\r\n      path: '/signup',\r\n      component: Signup\r\n    },\r\n    {\r\n      path: '/test',\r\n      component: chat\r\n    }\r\n  ]\r\n})\r\n\r\n/*router.beforeEach((to, from, next) => {\r\n  const publicPages = ['/test'];\r\n  const authRequired = !publicPages.includes(to.path);\r\n  const loggedIn = store.state.token;\r\n\r\n  // trying to access a restricted page + not logged in\r\n  // redirect to login page\r\n  if (authRequired && !loggedIn) {\r\n    next('/signin');\r\n  } else {\r\n    next();\r\n  }\r\n}); */\r\n\r\nexport default router;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAO,YAAY;AAC1D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,QAAQ,MAAM;AAE/B,MAAMC,KAAK,GAAGD,QAAQ,EAAE;AAExB,MAAME,MAAM,GAAGP,YAAY,CAAC;EAC1BQ,OAAO,EAAEP,gBAAgB,EAAE;EAC3BQ,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAET;EACb,CAAC,EACD;IACEQ,IAAI,EAAE,SAAS;IACfC,SAAS,EAAER;EACb,CAAC,EACD;IACEO,IAAI,EAAE,SAAS;IACfC,SAAS,EAAEP;EACb,CAAC,EACD;IACEM,IAAI,EAAE,OAAO;IACbC,SAAS,EAAEC;EACb,CAAC;AAEL,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}