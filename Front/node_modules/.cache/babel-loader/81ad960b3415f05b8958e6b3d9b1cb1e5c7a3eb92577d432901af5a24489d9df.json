{"ast":null,"code":"import { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nimport { getChannels } from '@/api/caller.service';\nimport popupErreur from '@/components/chat/popupErreur.vue';\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport store from '../../store/index.js';\nimport chat from './chat.vue';\n//import settingPopup from './settingPopup.vue';\n\nexport default {\n  name: \"sidebar\",\n  components: {\n    FontAwesomeIcon,\n    popupErreur\n  },\n  data() {\n    return {\n      isHidden: false,\n      alerte: false,\n      message: \"\",\n      channels: null\n    };\n  },\n  methods: {\n    // getMessages(){\n    //   console.log(store.state.idChannel)\n    //   // this.$chat.$emit(getMessages(store.state.idChannel))\n    //   // this.$refs.chat.getMessages(store.state.idChannel);\n    //   // this.$root.$emit('component1') //like this\n    //   // this.$root.$refs.Chat.foo();\n    //   // component('Chat').c1method()//like this\n\n    // }\n    //   showAlerte(mess){\n    //     this.popupErreur.showAlerte()\n    //     document.getElementById(\"alerte\").innerHTML = mess;\n    //     setTimeout(() => {\n    //       this.alerte = true;\n    //     }, 1000);\n    // },\n  },\n  mounted() {\n    getChannels().then(data => {\n      this.channels = data;\n      store.commit('setIdChannel', data[0].id);\n      store.commit('setNameChannel', data[0].name);\n      console.log(data[0].id);\n      console.log(data[0]);\n    }).catch(error => {\n      //this.alerte = true;\n      //this.popupErreur.changeProps(\"tatata\")\n      //this.message = \"Erreur lors de la récupération des channels\";\n      console.log(error);\n    });\n  }\n};","map":{"version":3,"names":["FontAwesomeIcon","getChannels","popupErreur","faThumbsDown","store","chat","name","components","data","isHidden","alerte","message","channels","methods","mounted","then","commit","id","console","log","catch","error"],"sources":["/Users/ben/Documents/dev/discord-vuejs/Front/src/views/Home/sidebar.vue"],"sourcesContent":["<template>\n\n  <!--<popupErreur mess=\"\" v-if=\"alerte\"/>-->\n</template>\n\n<script>\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nimport { getChannels } from '@/api/caller.service';\nimport popupErreur from '@/components/chat/popupErreur.vue';\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport store from '../../store/index.js'\nimport chat from './chat.vue';\n//import settingPopup from './settingPopup.vue';\n\nexport default {\n    name: \"sidebar\",\n    components: { \n      FontAwesomeIcon,\n      popupErreur,\n    },\n    data(){\n    return {\n      isHidden: false,\n      alerte: false,\n      message: \"\",\n      channels:null,\n        }\n      },\n    methods:{\n      // getMessages(){\n      //   console.log(store.state.idChannel)\n      //   // this.$chat.$emit(getMessages(store.state.idChannel))\n      //   // this.$refs.chat.getMessages(store.state.idChannel);\n      //   // this.$root.$emit('component1') //like this\n      //   // this.$root.$refs.Chat.foo();\n      //   // component('Chat').c1method()//like this\n\n\n      // }\n    //   showAlerte(mess){\n    //     this.popupErreur.showAlerte()\n    //     document.getElementById(\"alerte\").innerHTML = mess;\n    //     setTimeout(() => {\n    //       this.alerte = true;\n    //     }, 1000);\n    // },\n    },\n    mounted(){\n      getChannels()\n      .then(data => {\n        this.channels = data;\n        store.commit('setIdChannel', data[0].id);\n        store.commit('setNameChannel', data[0].name);\n        console.log(data[0].id)\n        console.log(data[0])})\n      .catch(error => {\n            //this.alerte = true;\n            //this.popupErreur.changeProps(\"tatata\")\n            //this.message = \"Erreur lors de la récupération des channels\";\n            console.log(error);\n          });\n    },\n}\n</script>\n\n<style>\n  .sidebar {\n    flex-direction: column;\n    row-gap: 20px;\n    width: 250px;\n    background-color: #2f3135;\n    color: gray;\n    \n  }\n  .input-group {\n    border-bottom: 2px solid #26282c;\n  }\n\n  /* Fake menu */\n  .sidebar__icon {\n    padding: 10px;\n  }\n  input {\n    color: #1c87c9;\n    opacity: 1;\n  }\n  .sidebar__icon > span {\n    font-weight: 600;\n  }\n  .sidebar__icon_conv{\n    padding:10px;\n  }\n  .sidebar__icon_conv > span {\n    font-weight: 600;\n  }\n  .sidebar__icon_conv:hover {\n    padding: 10px;\n    color: #fff;\n    background-color: #40464b;\n    cursor: pointer;\n  }\n  .sidebar_users{\n    flex:auto;\n  }\n\n  /* Profile */\n  .sidebar__profile {\n    align-items: center;\n    background-color: #292a2d;\n    padding-left: 10px;\n  }\n\n  .sidebar__profile > div > img {\n    height: 45px;\n    width: 45px;\n    margin: 5px;\n  }\n\n  /* Popup */\n  .button{\n  background-color:red;\n}\n</style>"],"mappings":"AAMA,SAASA,eAAc,QAAS,8BAA8B;AAC9D,SAASC,WAAU,QAAS,sBAAsB;AAClD,OAAOC,WAAU,MAAO,mCAAmC;AAC3D,SAASC,YAAW,QAAS,mCAAmC;AAChE,OAAOC,KAAI,MAAO,sBAAqB;AACvC,OAAOC,IAAG,MAAO,YAAY;AAC7B;;AAEA,eAAe;EACXC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE;IACVP,eAAe;IACfE;EACF,CAAC;EACDM,IAAIA,CAAA,EAAE;IACN,OAAO;MACLC,QAAQ,EAAE,KAAK;MACfC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAC;IACP;EACF,CAAC;EACHC,OAAO,EAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA;IACF;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACC;EACDC,OAAOA,CAAA,EAAE;IACPb,WAAW,EAAC,CACXc,IAAI,CAACP,IAAG,IAAK;MACZ,IAAI,CAACI,QAAO,GAAIJ,IAAI;MACpBJ,KAAK,CAACY,MAAM,CAAC,cAAc,EAAER,IAAI,CAAC,CAAC,CAAC,CAACS,EAAE,CAAC;MACxCb,KAAK,CAACY,MAAM,CAAC,gBAAgB,EAAER,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC;MAC5CY,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC,CAAC,CAAC,CAACS,EAAE;MACtBC,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CAAC,EACtBY,KAAK,CAACC,KAAI,IAAK;MACV;MACA;MACA;MACAH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;EACR;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}