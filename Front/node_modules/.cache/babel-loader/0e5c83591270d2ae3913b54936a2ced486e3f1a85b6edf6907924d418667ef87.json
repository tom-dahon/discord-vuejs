{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VueMultiselect = _resolveComponent(\"VueMultiselect\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_VueMultiselect, {\n    modelValue: $data.selected,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selected = $event),\n    options: $data.options\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_VueMultiselect","$data","selected","$event","options"],"sources":["/Users/ben/Documents/dev/discord-vuejs/Front/src/components/chat/multipleSelect.vue"],"sourcesContent":["<template>\n  <div>\n    <VueMultiselect\n      v-model=\"selected\"\n      :options=\"options\">\n    </VueMultiselect>\n  </div>\n</template>\n\n<script>\nimport VueMultiselect from 'vue-multiselect'\nexport default {\n  name:'multipleSelect',\n  components: { VueMultiselect },\n  data () {\n    return {\n      selected: null,\n      options: ['list', 'of', 'options']\n    }\n  }\n}\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.css\"></style>"],"mappings":";;;uBACEA,mBAAA,CAKM,cAJJC,YAAA,CAGiBC,yBAAA;gBAFNC,KAAA,CAAAC,QAAQ;+DAARD,KAAA,CAAAC,QAAQ,GAAAC,MAAA;IAChBC,OAAO,EAAEH,KAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}