{"ast":null,"code":"import { createStore } from \"vuex\";\nconst store = createStore({\n  state() {\n    return {\n      idUser: null,\n      username: null,\n      email: null,\n      idChannel: null,\n      setNameChannel: null\n    };\n  },\n  mutations: {\n    setIdUser(state, idUser) {\n      state.idUser = idUser;\n    },\n    setEmailUser(state, email) {\n      state.email = email;\n    },\n    setUsernameUser(state, username) {\n      state.username = username;\n    },\n    setIdChannel(state, idChannel) {\n      state.idChannel = idChannel;\n    },\n    setNameChannel(state, idUser) {\n      state.idUser = idUser;\n    }\n  },\n  getters: {\n    getToken(state) {\n      return state.token;\n    },\n    getIdUser(state) {\n      return state.idUser;\n    },\n    getUsername(state) {\n      return state.username;\n    },\n    getEmail(state) {\n      return state.email;\n    },\n    getIdChannel(state) {\n      return state.idChannel;\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","idUser","username","email","idChannel","setNameChannel","mutations","setIdUser","setEmailUser","setUsernameUser","setIdChannel","getters","getToken","token","getIdUser","getUsername","getEmail","getIdChannel"],"sources":["/Users/ben/Documents/dev/discord-vuejs/Front/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\"\nconst store = createStore({\n    state () {\n      return {\n        idUser: null,\n        username: null,\n        email: null,\n        idChannel: null,\n        setNameChannel: null,\n      }\n    },\n    mutations: {\n      setIdUser (state, idUser) {\n        state.idUser=idUser\n      },\n      setEmailUser (state, email) {\n        state.email=email\n      },\n      setUsernameUser (state, username) {\n        state.username=username\n      },\n      setIdChannel (state, idChannel) {\n        state.idChannel=idChannel\n      },\n      setNameChannel (state, idUser) {\n        state.idUser=idUser\n      },\n    },\n    getters: {\n      getToken(state) {\n        return state.token\n      },\n      getIdUser(state) {\n        return state.idUser\n      },\n      getUsername(state) {\n        return state.username\n      },\n      getEmail(state) {\n        return state.email\n      },\n      getIdChannel(state) {\n        return state.idChannel\n      },\n      \n    }\n\n})\nexport default store"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACtBE,KAAKA,CAAA,EAAI;IACP,OAAO;MACLC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,IAAI;MACfC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,SAAS,EAAE;IACTC,SAASA,CAAEP,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACC,MAAM,GAACA,MAAM;IACrB,CAAC;IACDO,YAAYA,CAAER,KAAK,EAAEG,KAAK,EAAE;MAC1BH,KAAK,CAACG,KAAK,GAACA,KAAK;IACnB,CAAC;IACDM,eAAeA,CAAET,KAAK,EAAEE,QAAQ,EAAE;MAChCF,KAAK,CAACE,QAAQ,GAACA,QAAQ;IACzB,CAAC;IACDQ,YAAYA,CAAEV,KAAK,EAAEI,SAAS,EAAE;MAC9BJ,KAAK,CAACI,SAAS,GAACA,SAAS;IAC3B,CAAC;IACDC,cAAcA,CAAEL,KAAK,EAAEC,MAAM,EAAE;MAC7BD,KAAK,CAACC,MAAM,GAACA,MAAM;IACrB;EACF,CAAC;EACDU,OAAO,EAAE;IACPC,QAAQA,CAACZ,KAAK,EAAE;MACd,OAAOA,KAAK,CAACa,KAAK;IACpB,CAAC;IACDC,SAASA,CAACd,KAAK,EAAE;MACf,OAAOA,KAAK,CAACC,MAAM;IACrB,CAAC;IACDc,WAAWA,CAACf,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACE,QAAQ;IACvB,CAAC;IACDc,QAAQA,CAAChB,KAAK,EAAE;MACd,OAAOA,KAAK,CAACG,KAAK;IACpB,CAAC;IACDc,YAAYA,CAACjB,KAAK,EAAE;MAClB,OAAOA,KAAK,CAACI,SAAS;IACxB;EAEF;AAEJ,CAAC,CAAC;AACF,eAAeL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}