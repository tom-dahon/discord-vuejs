{"ast":null,"code":"import axios from 'axios';\nimport { createStore } from \"vuex\";\nimport store from \"@/store\";\nimport router from '@/router';\naxios.defaults.baseURL = process.env.baseURL || process.env.apiUrl || 'http://localhost:8083/api';\nconst axiosIntance = axios.create({\n  baseURL: 'localhost:8083/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n//User\n// export const getConnexion = (userData) => {\n//   const requestBody = {\n//     username: userData.username,\n//     password: userData.password\n//   };\n\n//   return apiService.post('/auth/signin', requestBody)\n//     .then(response => response.data);\n// };\n\nexport async function getConnexion(userData) {\n  const requestBody = {\n    username: userData.username,\n    password: userData.password\n  };\n  const response = await axios.post('/auth/signin', requestBody);\n  return response;\n}\n\n//Channels\nexport async function getChannels() {\n  const response = await axios.get('/channels');\n  return response.data;\n}\nexport default axiosIntance;","map":{"version":3,"names":["axios","createStore","store","router","defaults","baseURL","process","env","apiUrl","axiosIntance","create","headers","getConnexion","userData","requestBody","username","password","response","post","getChannels","get","data"],"sources":["/Users/ben/Documents/dev/discord-vuejs/Front/src/api/caller.service.js"],"sourcesContent":["import axios from 'axios';\nimport { createStore } from \"vuex\";\nimport store from \"@/store\";\nimport router from '@/router';\naxios.defaults.baseURL = process.env.baseURL || process.env.apiUrl || 'http://localhost:8083/api';\n\nconst axiosIntance = axios.create({\n  baseURL: 'localhost:8083/api',\n  headers: {\n    'Content-Type': 'application/json'  \n  }\n});\n\n\n//User\n// export const getConnexion = (userData) => {\n//   const requestBody = {\n//     username: userData.username,\n//     password: userData.password\n//   };\n\n//   return apiService.post('/auth/signin', requestBody)\n//     .then(response => response.data);\n// };\n\nexport async function getConnexion(userData) {\n  const requestBody = {\n    username: userData.username,\n    password: userData.password\n  }\n  const response = await axios.post('/auth/signin',requestBody);\n  return response;\n}\n\n//Channels\nexport async function getChannels() {\n  const response= await axios.get('/channels')\n  return response.data;\n}\n\nexport default axiosIntance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7BH,KAAK,CAACI,QAAQ,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACF,OAAO,IAAIC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI,2BAA2B;AAEjG,MAAMC,YAAY,GAAGT,KAAK,CAACU,MAAM,CAAC;EAChCL,OAAO,EAAE,oBAAoB;EAC7BM,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO,eAAeC,YAAYA,CAACC,QAAQ,EAAE;EAC3C,MAAMC,WAAW,GAAG;IAClBC,QAAQ,EAAEF,QAAQ,CAACE,QAAQ;IAC3BC,QAAQ,EAAEH,QAAQ,CAACG;EACrB,CAAC;EACD,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,cAAc,EAACJ,WAAW,CAAC;EAC7D,OAAOG,QAAQ;AACjB;;AAEA;AACA,OAAO,eAAeE,WAAWA,CAAA,EAAG;EAClC,MAAMF,QAAQ,GAAE,MAAMjB,KAAK,CAACoB,GAAG,CAAC,WAAW,CAAC;EAC5C,OAAOH,QAAQ,CAACI,IAAI;AACtB;AAEA,eAAeZ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}