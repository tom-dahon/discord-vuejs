{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../views/Home.vue';\nimport Signin from '../views/Signin/Signin.vue';\nimport Signup from '../views/Signup.vue';\nimport { useStore } from 'vuex';\nimport chat from '../components/chat';\nconst store = useStore();\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [{\n    path: '/',\n    component: Home\n  }, {\n    path: '/signin',\n    component: Signin\n  }, {\n    path: '/signup',\n    component: Signup\n  }, {\n    path: '/test',\n    component: chat\n  }]\n});\nrouter.beforeEach((to, from, next) => {\n  const publicPages = ['/test'];\n  const authRequired = !publicPages.includes(to.path);\n  const loggedIn = store.state.token;\n\n  // trying to access a restricted page + not logged in\n  // redirect to login page\n  if (authRequired && !loggedIn) {\n    next('/signin');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Signin","Signup","useStore","chat","store","router","history","routes","path","component","beforeEach","to","from","next","publicPages","authRequired","includes","loggedIn","state","token"],"sources":["C:/Users/tomda/Documents/Cours S4/discord-vuejs/Front/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory} from 'vue-router';\r\nimport Home from '../views/Home.vue';\r\nimport Signin from '../views/Signin/Signin.vue';\r\nimport Signup from '../views/Signup.vue';\r\nimport { useStore } from 'vuex';\r\nimport chat from '../components/chat';\r\n\r\nconst store = useStore()\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes: [\r\n    { \r\n      path: '/', \r\n      component: Home \r\n    },\r\n    {\r\n      path: '/signin',\r\n      component: Signin\r\n    },\r\n    {\r\n      path: '/signup',\r\n      component: Signup\r\n    },\r\n    {\r\n      path: '/test',\r\n      component: chat\r\n    }\r\n  ]\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const publicPages = ['/test'];\r\n  const authRequired = !publicPages.includes(to.path);\r\n  const loggedIn = store.state.token;\r\n\r\n  // trying to access a restricted page + not logged in\r\n  // redirect to login page\r\n  if (authRequired && !loggedIn) {\r\n    next('/signin');\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAO,YAAY;AAC1D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,OAAOC,IAAI,MAAM,oBAAoB;AAErC,MAAMC,KAAK,GAAGF,QAAQ,EAAE;AAExB,MAAMG,MAAM,GAAGR,YAAY,CAAC;EAC1BS,OAAO,EAAER,gBAAgB,EAAE;EAC3BS,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,GAAG;IACTC,SAAS,EAAEV;EACb,CAAC,EACD;IACES,IAAI,EAAE,SAAS;IACfC,SAAS,EAAET;EACb,CAAC,EACD;IACEQ,IAAI,EAAE,SAAS;IACfC,SAAS,EAAER;EACb,CAAC,EACD;IACEO,IAAI,EAAE,OAAO;IACbC,SAAS,EAAEN;EACb,CAAC;AAEL,CAAC,CAAC;AAEFE,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,WAAW,GAAG,CAAC,OAAO,CAAC;EAC7B,MAAMC,YAAY,GAAG,CAACD,WAAW,CAACE,QAAQ,CAACL,EAAE,CAACH,IAAI,CAAC;EACnD,MAAMS,QAAQ,GAAGb,KAAK,CAACc,KAAK,CAACC,KAAK;;EAElC;EACA;EACA,IAAIJ,YAAY,IAAI,CAACE,QAAQ,EAAE;IAC7BJ,IAAI,CAAC,SAAS,CAAC;EACjB,CAAC,MAAM;IACLA,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}