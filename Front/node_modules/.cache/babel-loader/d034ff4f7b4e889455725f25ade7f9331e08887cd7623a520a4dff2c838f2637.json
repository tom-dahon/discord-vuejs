{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"id\", \"name\", \"disabled\", \"required\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"select\", {\n    class: \"form-control\",\n    id: $props.id,\n    name: $props.name,\n    disabled: $props.disabled,\n    required: $props.required\n  }, null, 8 /* PROPS */, _hoisted_1)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","class","id","$props","name","disabled","required"],"sources":["/Users/ben/Documents/dev/discord-vuejs/node_modules/vue3-select2-component/src/Select2.vue"],"sourcesContent":["<template>\n  <div>\n    <select class=\"form-control\" :id=\"id\" :name=\"name\" :disabled=\"disabled\" :required=\"required\"></select>\n  </div>\n</template>\n\n<script>\nimport $ from 'jquery';\nimport 'select2/dist/js/select2.full';\nimport 'select2/dist/css/select2.min.css'\n\nexport default {\n  name: 'Select2',\n  data() {\n    return {\n      select2: null\n    };\n  },\n  emits: ['update:modelValue'],\n  props: {\n    modelValue: [String, Array], // previously was `value: String`\n    id: {\n      type: String,\n      default: ''\n    },\n    name: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    options: {\n      type: Array,\n      default: () => []\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    settings: {\n      type: Object,\n      default: () => {}\n    },\n  },\n  watch: {\n    options: {\n      handler(val) {\n        this.setOption(val);\n      },\n      deep: true\n    },\n    modelValue: {\n      handler(val) {\n        this.setValue(val);\n      },\n      deep: true\n    },\n  },\n  methods: {\n    setOption(val = []) {\n      this.select2.empty();\n      this.select2.select2({\n        placeholder: this.placeholder,\n        ...this.settings,\n        data: val\n      });\n      this.setValue(this.modelValue);\n    },\n    setValue(val) {\n      if (val instanceof Array) {\n        this.select2.val([...val]);\n      } else {\n        this.select2.val([val]);\n      }\n      this.select2.trigger('change');\n    }\n  },\n  mounted() {\n    this.select2 = $(this.$el)\n      .find('select')\n      .select2({\n        placeholder: this.placeholder,\n        ...this.settings,\n        data: this.options\n      })\n      .on('select2:select select2:unselect', ev => {\n        this.$emit('update:modelValue', this.select2.val());\n        this.$emit('select', ev['params']['data']);\n      });\n    this.setValue(this.modelValue);\n  },\n  beforeUnmount() {\n    this.select2.select2('destroy');\n  }\n};\n</script>\n"],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,mBAAA,CAAsG;IAA9FC,KAAK,EAAC,cAAc;IAAEC,EAAE,EAAEC,MAAA,CAAAD,EAAE;IAAGE,IAAI,EAAED,MAAA,CAAAC,IAAI;IAAGC,QAAQ,EAAEF,MAAA,CAAAE,QAAQ;IAAGC,QAAQ,EAAEH,MAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}