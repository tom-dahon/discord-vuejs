{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_multiselect = _resolveComponent(\"multiselect\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_multiselect, {\n    modelValue: $data.value,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.value = $event),\n    options: $data.options\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_multiselect","$data","value","$event","options"],"sources":["/Users/ben/Documents/dev/discord-vuejs/Front/src/components/chat/multipleSelect.vue"],"sourcesContent":["<!-- Vue component -->\n<template>\n  <div>\n    <multiselect v-model=\"value\" :options=\"options\"></multiselect>\n  </div>\n</template>\n\n<script>\n  import Multiselect from 'vue-multiselect'\n  export default {\n    name:'multipleSelect',\n    // OR register locally\n    components: { Multiselect },\n    data () {\n      return {\n        value: null,\n        options: ['list', 'of', 'options']\n      }\n    }\n  }\n</script>\n\n<!-- New step!\n     Add Multiselect CSS. Can be added as a static asset or inside a component. -->\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n"],"mappings":";;;uBAEEA,mBAAA,CAEM,cADJC,YAAA,CAA8DC,sBAAA;gBAAxCC,KAAA,CAAAC,KAAK;+DAALD,KAAA,CAAAC,KAAK,GAAAC,MAAA;IAAGC,OAAO,EAAEH,KAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}